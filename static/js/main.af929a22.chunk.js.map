{"version":3,"sources":["logo.svg","Components/Marker/Marker.js","Components/Image/Image.js","App.js","reportWebVitals.js","index.js"],"names":["Marker","React","useState","newMarker","setNewMarker","markers","setMarkers","hasContent","SethasContent","titleInput","document","querySelector","descInput","handleChange","value","removeMarker","e","index","target","parentNode","dataset","key","splice","className","onClick","x","clientX","y","clientY","imgDiv","childNodes","getElementsByTagName","length","img","imgRect","getBoundingClientRect","percentL","left","width","percentT","top","height","style","type","onChange","placeholder","role","marker","title","description","id","concat","opacity","pointerEvents","map","data-key","Image","src","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.af929a22.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nfunction Marker() {\r\n    const [newMarker, setNewMarker] = React.useState([0,0,false]),\r\n          [markers, setMarkers] = React.useState([]),\r\n          [hasContent, SethasContent] = React.useState(false),\r\n          titleInput = document.querySelector(\"input.title\"),\r\n          descInput = document.querySelector(\"input.description\");\r\n\r\n    const createMarker = (e) => {\r\n        let x = e.clientX,\r\n            y = e.clientY,\r\n            parent = e.target.parentNode,\r\n            imgDiv = parent.childNodes[0];\r\n        \r\n        if (imgDiv.getElementsByTagName('img').length > 0) {\r\n            let img = imgDiv.childNodes[0],\r\n                imgRect = img.getBoundingClientRect(),\r\n                offsetL = x - imgRect.left - 15,\r\n                percentL = ( (offsetL * 100) / img.width),\r\n                offsetT = y - imgRect.top - 40, \r\n                percentT = (offsetT * 100) / img.height;\r\n\r\n            percentL = percentL > 80 ? percentL - 16: percentL;\r\n            percentT = percentT > 80 ? percentT - 16: percentT;\r\n            \r\n            setNewMarker([percentT,percentL,true])\r\n        }\r\n    }\r\n    const saveMarker = (e) => {\r\n        let marker = e.target.parentNode,\r\n            title = marker.querySelector(\".title input\").value,\r\n            description = marker.querySelector(\".description input\").value,\r\n            id = 0,\r\n            top = newMarker[0],\r\n            left = newMarker[1];\r\n       \r\n        if (markers.length>0)\r\n            id = markers[markers.length-1].id;\r\n        id +=1;\r\n        \r\n        setMarkers(markers.concat({id, top, left, title, description}))\r\n        setNewMarker([newMarker[0],newMarker[1],false])\r\n        \r\n        titleInput.value=\"\";\r\n        descInput.value=\"\";\r\n        SethasContent(false)\r\n    }\r\n    const handleChange = () => {\r\n        if (titleInput.value!==\"\" && descInput.value!==\"\")\r\n            SethasContent(true)\r\n        else\r\n            SethasContent(false)\r\n    }\r\n    const removeMarker = (e) => {\r\n        let target = e.target.parentNode,\r\n            marker = target.parentNode,\r\n            index = marker.dataset.key;\r\n            \r\n        markers.splice(index - 1, 1)\r\n        setMarkers(markers)\r\n        setNewMarker([0,0,false])\r\n    }\r\n    return (\r\n        <div className=\"markers\" onClick={createMarker}>\r\n            <div className={`new-marker ${newMarker[2] ? `on` : ``}`} style={{top: newMarker[0] !== \"undefined\" ? `${newMarker[0]}%` : ``, left: newMarker[1] !== \"undefined\" ? `${newMarker[1]}%` : ``}}>\r\n                <div className=\"title\">\r\n                    <input type=\"text\" onChange={handleChange} className=\"title\" placeholder=\"Set title\"></input>\r\n                </div>\r\n                <div className=\"description\">\r\n                    <input type=\"text\" onChange={handleChange} className=\"description\" placeholder=\"Set Description\"></input>\r\n                </div>\r\n                <div className=\"submit\" role=\"button\" onClick={saveMarker} style={{opacity : hasContent ? 1 : 0.4, pointerEvents: hasContent ? \"all\": \"none\"}}>\r\n                    set marker\r\n                </div>\r\n            </div>\r\n            {\r\n                markers.length > 0 &&\r\n                    markers.map(marker => {\r\n                        return (\r\n                            <div className=\"marker\" key={marker.id} data-key={marker.id} style={{top: `${marker.top}%`, left: `${marker.left}%`}}>\r\n                                <div className=\"text\">\r\n                                    <div className=\"title\">\r\n                                        {marker.title}\r\n                                    </div>\r\n                                    <div className=\"description\">\r\n                                        {marker.description}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"actions\">\r\n                                    <div className=\"close\" onClick={removeMarker}></div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n            }\r\n        </div>\r\n    );\r\n}\r\nexport default Marker;","import React from 'react'\r\n\r\nfunction Image() {\r\n    return (\r\n        <div className=\"img\">\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/7/7a/Aztec_Ruins_National_Monument_by_RO.JPG\"/>\r\n        </div>\r\n    );\r\n}\r\nexport default Image","import logo from './logo.svg';\nimport React from 'react'\nimport Marker from './Components/Marker/Marker'\nimport Image from './Components/Image/Image'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"infograph\">\n      <Image/>\n      <Marker />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}